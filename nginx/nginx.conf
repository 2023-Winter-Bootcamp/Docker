user nginx;
worker_processes auto;
pid /run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    upstream back {
        server backend:8000;
    }

    server {
        listen 80;
        server_name giterview.site;
        charset utf-8;

        # Allow only for register SSL (Certbot)
        location /.well-known/acme-challenge/ {
            allow all;
            root /var/www/certbot;
        }

        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 443 ssl;
        server_name giterview.site;
        server_tokens off;

        ssl_certificate /etc/letsencrypt/live/giterview.site/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/giterview.site/privkey.pem;
        include /etc/letsencrypt/options-ssl-nginx.conf;
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

        # ignore cache frontend
        location ~* (service-worker\.js)$ {
            add_header 'Cache-Control' 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
            expires off;
            proxy_no_cache 1;
        }

        location /api/ {
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_redirect off;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-CSRFToken $cookie_csrftoken;
            proxy_pass http://back;
        }

        location / {
            root /var/www/frontend;
            try_files $uri $uri/ /index.html?q=$uri&$args;
        }
    }
}